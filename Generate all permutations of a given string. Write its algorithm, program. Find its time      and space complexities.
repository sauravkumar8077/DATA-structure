 import java.util.*;
    public class Permutations {
    public static void generatePermutations(char[] arr, int index, List<String> result) {
        if (index == arr.length) {
            result.add(new String(arr));
            return;
        }
        for (int i = index; i < arr.length; i++) {
            swap(arr, i, index); 
            generatePermutations(arr, index + 1, result); 
            swap(arr, i, index); 
        }
    }
    public static void swap(char[] arr, int i, int j) {
        char temp = arr[i];
        arr[i] = arr[j];
        arr[j] = temp;
    }
    public static List<String> getPermutations(String s) {
        List<String> result = new ArrayList<>();
        generatePermutations(s.toCharArray(), 0, result);
        return result;
    }

    public static void main(String[] args) {
        String input = "abc";
        List<String> permutations = getPermutations(input);
        System.out.println("All permutations of \"" + input + "\":");
        for (String p : permutations) {
            System.out.println(p);
        }
    }
}
// Time complexity=O(n)
// Space complexity=O(1)
